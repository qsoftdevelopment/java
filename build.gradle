plugins {
    id "io.franzbecker.gradle-lombok" version "1.8"
    id 'com.github.johnrengelman.shadow' version '1.2.4'
    id "com.bmuschko.nexus" version "2.3.1"
    id 'com.github.ben-manes.versions' version '0.15.0'
    id 'java'
    id 'jacoco'
    id 'maven'
    id 'checkstyle'
    id 'findbugs'
}
group = 'com.pubnub'
version = '4.21.0'

description = """"""

sourceCompatibility = 1.7
targetCompatibility = 1.7

configurations.all {
}

lombok {
    version = "1.16.18"
}

repositories {
    mavenCentral()
}


dependencies {
    compile group: 'com.squareup.retrofit2', name: 'retrofit', version: '2.5.0'

    compile group: 'com.squareup.okhttp3', name: 'logging-interceptor', version: '3.12.1'

    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.22'

    // jackson
    // compile group: 'com.fasterxml.jackson.core', name: 'jackson-core', version:'2.7.3'
    // compile group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version:'2.7.3'
    // compile group: 'com.squareup.retrofit2', name: 'converter-jackson', version:'2.1.0'

    // gson
    compile group: 'com.google.code.gson', name: 'gson', version: '2.8.2'
    compile group: 'com.squareup.retrofit2', name: 'converter-gson', version:'2.3.0'
    //

    testCompile group: 'ch.qos.logback', name: 'logback-classic', version:'1.1.8'
    testCompile group: 'ch.qos.logback', name: 'logback-core', version:'1.1.8'
    testCompile group: 'junit', name: 'junit', version:'4.12'
    testCompile group: 'com.github.tomakehurst', name: 'wiremock', version:'1.58'
    testCompile group: 'org.hamcrest', name: 'hamcrest-all', version:'1.3'
    testCompile group: 'com.jayway.awaitility', name: 'awaitility', version:'1.7.0'
    testCompile group: 'org.json', name: 'json', version: '20160810'
}

jacoco {
    toolVersion = "0.7.6.201602180812"
}

jacocoTestReport {
    reports {
        xml.enabled = true
        html.enabled = true
    }
}

checkstyle {
    configFile = new File(rootDir, "src/test/checkstyle.xml")
    toolVersion = '6.19'
}

tasks.withType(Checkstyle) {

    exclude '**/vendor/**', "**/*Test*"

    reports {
        xml.enabled =  true
        html.enabled = true
    }
}

tasks.withType(FindBugs) {

    exclude '**/vendor/**'

    reports {
        xml.enabled false
        html.enabled true
    }
}

check.dependsOn jacocoTestReport

extraArchive {
    sources = false
    tests = true
    javadoc = true
}

nexus {
    sign = true
    repositoryUrl = 'https://oss.sonatype.org/service/local/staging/deploy/maven2/'
    snapshotRepositoryUrl = 'https://oss.sonatype.org/content/repositories/snapshots'
}

modifyPom {
    project {
        name 'PubNub Java SDK'
        description 'PubNub is a cross-platform client-to-client (1:1 and 1:many) push service in the cloud, capable of\n' +
                '        broadcasting real-time messages to millions of web and mobile clients simultaneously, in less than a quarter\n' +
                '        second!'
        url 'https://github.com/pubnub/java'
        inceptionYear '2009'

        scm {
            url 'https://github.com/pubnub/java'
        }

        licenses {
            license {
                name 'MIT License'
                url 'https://github.com/pubnub/pubnub-api/blob/master/LICENSE'
                distribution 'repo'
            }
        }

        developers {
            developer {
                id 'PubNub'
                name 'PubNub'
                email 'support@pubnub.com'
            }
        }
    }
}

import io.franzbecker.gradle.lombok.task.DelombokTask

task delombok(type: DelombokTask, dependsOn: compileJava) {
    ext.outputDir = file("$buildDir/delombok")
    outputs.dir(outputDir)
    sourceSets.main.java.srcDirs.each {
        inputs.dir(it)
        args(it, "-d", outputDir)
    }
}

task delombokHelp(type: DelombokTask) {
    args "--help"
}

javadoc {
    dependsOn delombok
    source = delombok.outputDir
    destinationDir = file("docs")

    options.noTimestamp = true

}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from "$buildDir/delombok";
}

build.finalizedBy(shadowJar)
